/*
–ó–∞–¥–∞–Ω–∏–µ 1
üè†

–ò—Å–ø–æ–ª—å–∑—É—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞, –ø–æ–ª—É—á–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç —Å—Ç–µ–Ω, –∏ –∞–¥—Ä–µ—Å.
*/

const house = {
  adress: "Pfondorfer str 69",
  postIndex: 10408,
  roofColor: "red",
  wallColor: "green",
};

const { wallColor,adress } = house; // destructuring assignment 
console.log(wallColor, adress);

/*
  –ó–∞–¥–∞–Ω–∏–µ 2
üçè –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∏–Ω–≥–æ–≤ –∏ –µ—â–µ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–∏–ø–∞ —Å—Ç—Ä–∏–Ω–≥ prefix. 
–ú–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å–ª–æ–≤–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, 
—Å–ª–µ–≤–∞ –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω –ø—Ä–µ—Ñ–∏–∫—Å.

–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.

–ü—Ä–∏–º–µ—Ä: ["apple", "orange"] —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º "pine" ----> ["pineapple", "pineorange"]
  */

const stringArray = ["apple", "orange"];

function prefixConcat(arr, prefix) {
  const newArray = [...stringArray];
  let i = 0;

  if (newArray) {
    while (i < newArray.length) {
      newArray[i] = prefix + newArray[i];
      i++;
    }
    return newArray;
  }
}
console.log(prefixConcat(stringArray, "pine"));
console.log(stringArray);


const arr = ["apple", "orange"]; // –º–µ—Ç–æ–¥, –º—É—Ç–∏—Ä—É—é—â–∏–π –º–∞—Å—Å–∏–≤ (–∫–æ—Ç–æ—Ä—ã–π –º–µ–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤)
function mutate (arr) {
  for (let i = 0; i < arr.length; i++) {
    arr[i] = "pickle";
  }
}
mutate(arr);
console.log(arr);


function addPrefix(arr, prefix) {
  const prefixArr = [];

  for (let i = 0; i < arr.length; i++)  {
    prefixArr[i] = prefix + arr[i];
  }
  return prefixArr;
}
const saltedPickles = addPrefix(arr, "salted");
console.log(arr); //[ 'pickle', 'pickle' ]
console.log(saltedPickles); // [ 'saltedpickle', 'saltedpickle' ]


/*
–ó–∞–¥–∞–Ω–∏–µ 3
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é gardener, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –ø—Ä–µ–¥–º–µ—Ç, 
–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —ç—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞.

–°–æ–∑–¥–∞–π—Ç–µ –µ—â–µ –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª–∏–≤–∞—Ç—å —Ü–≤–µ—Ç–æ–∫, –∫–æ—Ç–æ—Ä–∞—è –±—ã –≤—ã–≤–æ–¥–∏–ª–∞ –≤ –∫–æ–Ω—Å–æ–ª—å "I water this " 
–ø–ª—é—Å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∫–∞.

–í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é gardener c –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª–∏–≤–∞—Ç—å —Ü–≤–µ—Ç–æ–∫, 'rose'.

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–¥—É–º–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∞–¥–æ–≤–Ω–∏–∫. üßë‚Äçüåæ
*/

function gardener (operation, item) {
    operation(item);
}


// hoisting - –ø–æ–¥–Ω—è—Ç–∏–µ –≤–≤–µ—Ä—Ö  (learn javascript - —É—á–µ–±–Ω–∏–∫)
const water = function (plant) {
    console.log("I water this " + plant);
}

const cut = function(item) {
    console.log("I cut bushes with " + item);
}

const kill = function(actionWith) {
console.log("I killed Ms MArple with " + actionWith);
}

gardener((plant)=>{console.log("I dig out this " + plant);}, "nettle"); // callback (—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é) —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

gardener(water, "rose");
gardener(cut, "shears");
gardener(kill, "shears");







// side effect - –ø–æ–±–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
let x = 10; 
function getHEllo () {
  x +=2; // –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
  return "Hello";
}
console.log(getHEllo());
console.log(getHEllo());

console.log(x);


